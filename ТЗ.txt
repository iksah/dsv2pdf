Визуализация результатов опросов.

_________________________________
Целью данного проекта является разработка библиотеки функций и консольного приложения, отвечающего следующим требованиям:
    1. Принимать на входе dsv-файл и набор инструкций.
    2. Строить графики по данным полученного файла и на основании полученных иструкций и сохранять их в pdf-файл.

Основной документацией, которой необходимо руководстоваться в процессе разработки:
    Д-1. Спецификация csv-файлов: https://tools.ietf.org/html/rfc4180
    *Данный документ описывает частный случай dsv-файлов - csv-файлы. Однако, не приуменьшая общности, данную спцификацию можно применять к любым dsv-файлам с известным разделителем.
    
Требуется:
ТБ) реализовать набор функций (библиотеку), реализующих следующий функционал:
    1. Ввод данных:
        1.1. Получать данные из файла по заданному адресу.
        1.2. Преобразовывать данные из файла в массив в соответствии с Д-1.
    2. Вывод данных:
        2.1. По заданному набору данных и набору инструкций строить графики (диаграммы).
        2.2. Сохранять полученный графики в файл с заданным расширением.
TK) создать отдельное консольное приложение:
    1. Получающее на входе:
        1.1. Адрес файла с данными
        1.2. Описание входного файла (разделитель, и пр.)
        1.2. Адрес файла с результатами
        1.3. Описание графиков (какие графики, форматирование, и пр.)
    2. И создающее файл(ы) с графиками.
    
В процессе работы предполагается выполнение 4-х этапов.
1-й этап - начало работы:
    1. Настройка рабочего окружения.
    2. Изучение основ языка Python и библиотеки Matplotlib.
    3. Создание макета функций из ТБ. Реализация требований 1.1(получение данных из файла) и 2.1(построение графика по заданным данным(массиву)).
*На данном этапе не требуется реализовывать учет пользовательских инструкций.

2-й этап - реализация библиотеки функций (ТБ):
    ТБ-1. Реализация разбора(парса) данных, полученных из файла, в соответствии со спецификацией Д-1.
    ТБ-2. Реализация учета пользовательских инструкций и построения по ним графиков.
    
3-й этап - сохранение результатов в файл(ТБ) и консольное приложение(ТК).
    ТК - Создание скрипта, получающего данные из командной строки, и запускающего реализованные функции с заданными параметрами.
    ТБ-2. Реализация сохранения результатов работы функции в файл/файлы с заданным расширением.
    
4-й этап - реализованный проект.
    На данном этапе требуется окончательно собрать проект и подготовить документацию, описывающую особенности работы с проектом.
    
Каждый этап подразумевает тестрование разработанного функционала (unit-тестирование).

______________________________
UPD - 20161003

Задание предполагает разработку двух НЕЗАВИСИМЫХ модулей.
Первый модуль должен реализовывать функцию чтения и разбора DSV (Delimeter Separated Values) файлов. DSV представляет собой текстовый файл, в котором значения столбцов таблицы разделены некоторым delimeter. Первая строка может содержать заголовки столбцов.
На входе данный модуль должен получать следующие сведения: адрес файла (обязательный параметр) и символ-делиметер (необязательный параметр). Если делиметер не указан или раширение файла .csv - значит файл CSV (Comma Separated Values), а делиметер равен ','.
В результате работы модуль должен возвращать двумерный массив, содержащий данные из файла, или значение false, если файл не соответствует спецификации.
Второй модуль - функцию создания и сохранения графиков. При этом модуль должен предоставлять возможность пользователю выбрать, какой тип графиков он хочет получить, стиль их оформления, формат сохранения файлов (адрес, расширение и пр.). На входе данный модуль должен принимать массив значений для построения графика (обязательный параметр) и набор "инструкций"(тип графика, стиль оформления, адрес сохранения и пр.) (необязательный параметр, если не заданы - создается график (тип и стиль оформления обсудим позже) и сохраняется в pdf-файл со сгенерировнным именем).
После того, как будут разработаны данные модули, необходимо будет разработать скрипт для визуализации результатов опросов. Предполагается, что для построения графика будет использоваться двумерный массив. Должна быть предоставлена возможность создания различных типов графиков (например, круговых диаграмм для каждого вопроса, трехмерной поверхности, гистограммы).

На первом этапе предполагается работа по реализации модулей. Необходимо реализовать наиболее базовые функции модулей - открытие и считывания данных файла для первого модуля и создавать графики по заданному массиву(одномерному) (не важно, какой график). Так же по результатам данного этапе необходимо составить список возможных (по средствам Matplotlib) типов графиков, стилей их оформления и пр.

Второй этап предполагает для первого модуля - разработку парсера dsv-файлов и создания по ним двумерных массивов, а для второго - разработку функции, учитывающий различные возможности для создания графиков.

На третьем этапе предполагается окончание создания модулей и создание скрита. Первый модуль к началу третьего этапа должен быть практически завершен (он и состоит из двух "частей" - открытия и парса файла), а для второго модуля необходимо будет реализовать возможность сохранения результатов несколькими способами (pdf файл, несколько png-файлов, и пр).

Четвертый этап отводится для устранения багов и написания документации.

Приведем пример работы скрипта:
Дан csv файл:
first_column, second_column
1,3
4,2
в результате работы первого модуля должен быть создан массив:
data = [[first_column, second_column], [1,3], [4,2]]
По данному массиву вторым модулем должен быть создан график. Например см. файл /dummy.png
___________________________________________________________________________________________
UPD - 20161026 - IMPORTANT
Файлы, предоставляемые заказчиком для обработки не являются файлами csv/dsv (не соответствуют спецификации csv/dsv файлов). В следствии этого разработано новое ТЗ.
 
Задание предполагает разработку двух НЕЗАВИСИМЫХ модулей.
Первый модуль должен реализовывать функцию чтения и разбора представленного файла, соответстующего структуре файла, предоставленной заказчиком.
На входе данный модуль должен получать следующие сведения: тип файла(файл с общими вопросами или файл с вопросами по преподавателям, обязательный параметр), адрес файла (обязательный параметр) и символ-делиметер (необязательный параметр). Если делиметер не указан, то в качестве делиметера используется ';'.

Структура файла с результатами ответов по предподавателям.
file = record *(crlf crlf record)[*crlf]
record = "Семестр" delim "Направление" crlf semestre delim specialization crlf question delim teacher_name delim course crlf answers
answers = (variant *(delim variant) crlf count *(delim count)) / (comment *(crlf comment))

Структура файла с общими вопросами.
file = record *(crlf crlf record)[*crlf]
record = question crlf answers
answers = comment *(crlf comment)

Здесь представлена общая структура файла с результатами ответов по предподавателям.
crlf - символ новой строки (перевода каретки).
В круглых скобках указываются связанные в один блок элементы.
В квадратных скобках - необязательные элементы.
Звездочка (*) перед элементом очзначает, что элемент может повторяться 0 и более раз.

В результате работы модуль должен возвращать двумерный массив, содержащий данные из файла в соответствии со структурой csv файла (см. документацию), или значение false, если файл не соответствует требуемой струтуре.
Предлагается использовать следующую структуру для двумерного массива, созданного по файлу с результатами ответов по преподавателям:
Первый элемент списка - заголовки столбцов (семестр, направление, преподаватель, предмет, вопрос(тип вопроса), ответы).
Все последующие элементы списка - значения из записей файла.
Поле "ответы" (на данный момент, в пятнцу будет апдейт) предлагается формировать следующим образом: последовательно указываются значения ответов. Если это ответы-счетчики - то сначала указывается количество ответов для варианта 1, потом 2 и так далее.
В случае, если файл содержит в себе общие вопросы - то из предложенной стркутуры нужно просто убрать ненужные столбцы.

Второй модуль - функцию создания и сохранения инфографики. При этом модуль должен предоставлять возможность пользователю выбрать, какой тип графиков он хочет получить(круговая диаграмма или гистограмма), стиль их оформления(используемые цвета/цветовые схемы), формат сохранения файлов (адрес, расширение и пр.). Для некоторых вопросов невозможно будет построить графики (произвольные комментарии) - для таких вопрос необходимо будет просто вывести ответы.
На входе данный модуль должен принимать массив значений для построения графика (обязательный параметр) и набор "инструкций"(тип графиков, стиль оформления, адрес сохранения и пр.) (необязательный параметр, если не заданы - создается график (тип и стиль оформления заданные по умолчанию) и сохраняется в pdf-файл со сгенерировнным именем).

После того, как будут разработаны данные модули, необходимо будет разработать скрипт для визуализации результатов опросов. 

Срок выполнения задания - 4 ноября 2016 г.
